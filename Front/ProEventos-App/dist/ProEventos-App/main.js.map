{"version":3,"sources":["./src/app/components/contatos/contatos.component.ts","./src/app/components/contatos/contatos.component.html","./src/app/helpers/DateTimeFormat.pipe.ts","./src/app/components/palestrantes/palestrante-lista/palestrante-lista.component.ts","./src/app/components/palestrantes/palestrante-lista/palestrante-lista.component.html","./src/app/components/user/perfil-detalhe/perfil-detalhe.component.ts","./src/app/components/user/perfil-detalhe/perfil-detalhe.component.html","./src/app/services/lote.service.ts","./src/environments/environment.ts","./src/app/components/eventos/eventos.component.ts","./src/app/components/eventos/eventos.component.html","./src/app/shared/nav/nav.component.html","./src/app/shared/nav/nav.component.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/models/Pagination.ts","./src/app/components/redesSociais/redesSociais.component.ts","./src/app/components/redesSociais/redesSociais.component.html","./src/app/components/eventos/evento-lista/evento-lista.component.ts","./src/app/components/eventos/evento-lista/evento-lista.component.html","./src/app/components/user/registration/registration.component.ts","./src/app/components/user/registration/registration.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.ts","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.html","./src/app/helpers/ValidatorField.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/util/constants.ts","./src/app/shared/titulo/titulo.component.html","./src/app/shared/titulo/titulo.component.ts","./src/app/app.module.ts","./src/app/guard/auth.guard.ts","./src/app/services/account.service.ts","./src/app/components/palestrantes/palestrante-detalhe/palestrante-detalhe.component.ts","./src/app/components/palestrantes/palestrante-detalhe/palestrante-detalhe.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/interceptors/jwt.interceptor.ts","./src/app/services/redeSocial.service.ts","./src/app/services/evento.service.ts","./src/app/components/palestrantes/palestrantes.component.ts","./src/app/components/palestrantes/palestrantes.component.html","./src/app/services/palestrante.service.ts","./src/app/components/user/perfil/perfil.component.ts","./src/app/components/user/perfil/perfil.component.html","./src/app/app-routing.module.ts","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contatos',\n  templateUrl: './contatos.component.html',\n  styleUrls: ['./contatos.component.scss']\n})\nexport class ContatosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Contatos'\" [iconClass]=\"'fas fa-envelope-open-text'\"></app-titulo>\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Constants } from '../util/constants';\n\n@Pipe({\n  name: 'DateTimeFormat'\n})\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return super.transform(value, Constants.DATE_TIME_FMT);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PaginatedResult, Pagination } from '@app/models/Pagination';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { environment } from '@enviroments/environment';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-palestrante-lista',\n  templateUrl: './palestrante-lista.component.html',\n  styleUrls: ['./palestrante-lista.component.scss']\n})\nexport class PalestranteListaComponent implements OnInit {\n\n  modalRef?: BsModalRef;\n\n  public Palestrantes : Palestrante[] = [];\n  public widthImg : number = 150;\n  public marginImg : number = 2;\n  public exibirImagem : boolean = true;\n  public palestrantesFiltrados : Palestrante[] = [];\n\n  public pagination = {} as Pagination;\n\n  public palestranteId = 0;\n\n  termoBuscaChanged: Subject<string> = new Subject<string>();\n\n  constructor(private palestranteService: PalestranteService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n    ) { }\n\n  public getImagem(imageName: string): string{\n    if(imageName)\n     return environment.apiURL + `Resources/Perfil/${imageName}`\n  else\n    return './assets/img/perfil.png'\n  }\n\n  public filtrarPalestrantes(evt: any): void{\n    if(this.termoBuscaChanged.observers.length === 0){\n      this.termoBuscaChanged.pipe(debounceTime(1000)).subscribe(\n        (filtrarPor) => {\n            this.spinner.show();\n            this.palestranteService\n            .getPalestrantes(\n            this.pagination.currentPage,\n            this.pagination.itemsPerPage,\n            filtrarPor\n            ).subscribe(\n            (paginatedResult: PaginatedResult<Palestrante[]>) => {\n              this.Palestrantes = paginatedResult.result;\n              this.pagination = paginatedResult.pagination;\n            },\n            (error: any) => {\n              this.spinner.hide();\n              this.toastr.error('Erro ao carregar os palestrantes', 'Erro!');\n            }\n        ).add(() => this.spinner.hide());\n        }\n      )\n    }\n    this.termoBuscaChanged.next(evt.value);\n  }\n\n  public ngOnInit(): void{\n    //Definir a paginação antes de carregar os palestrantes, a ordem importa!\n    this.pagination = {currentPage: 1, itemsPerPage: 3, totalItems: 1} as Pagination;\n    this.carregarpalestrantes();\n  }\n\n  public alterarImagem(): void{\n    this.exibirImagem = !this.exibirImagem;\n  }\n\n  public mostraImagem(imagemURL: string): string{\n    return (imagemURL !== '')\n    ? `${environment.apiURL}resources/images/${imagemURL}`\n    : '/assets/img/noImage.png';\n  }\n\n  public carregarpalestrantes(): void{\n    /** spinner starts on init */\n    this.spinner.show();\n    this.palestranteService.getPalestrantes(this.pagination.currentPage, this.pagination.itemsPerPage).subscribe(\n      (paginatedResult: PaginatedResult<Palestrante[]>) => {\n        this.Palestrantes = paginatedResult.result;\n        this.pagination = paginatedResult.pagination;\n      },\n      (error: any) => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao carregar os palestrantes', 'Erro!');\n      }\n  ).add(() => this.spinner.hide());\n\n  }\n\n  public pageChanged(event): void{\n    this.pagination.currentPage = event.page;\n    this.carregarpalestrantes();\n  }\n\n  /*openModal(event: any, template: TemplateRef<any>, palestranteId: number) {\n    this.palestranteId = palestranteId;\n    event.stopPropagation();\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirm(): void {\n    this.modalRef?.hide();\n    this.spinner.show();\n\n    this.palestranteService.deletepalestrante(this.palestranteId).subscribe(\n      (result: any) => {\n        console.log(result);\n        if(result.message === 'Deletado'){\n          this.toastr.success(`O palestrante foi deletado com sucesso!`, 'Deletado!');\n          this.carregarpalestrantes();\n        }\n      },\n      (error: any) => {\n        console.error(error);\n        this.toastr.error(`O palestrante de código ${this.palestranteId} não foi deletado!`, \"Erro!\")\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n  decline(): void {\n    this.modalRef?.hide();\n  }*/\n\n}\n","<div class=\"d-flex\">\n  <div class=\"flex-fill\">\n    <div class=\"input-group mb-2\">\n      <div class=\"input-group-prepend\">\n        <div class=\"input-group-text\">Filtro: </div>\n      </div>\n      <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Filtrar por Tema e Local\"\n      (input)=\"filtrarPalestrantes($event.target)\">\n    </div>\n  </div>\n</div>\n<div *ngIf=\"Palestrantes && Palestrantes.length\" class=\"row mt-2\">\n  <div class=\"col-md-4 mb-4 d-flex align-items-stretch\" *ngFor=\"let palestrante of Palestrantes\">\n    <div class=\"card\">\n      <div class=\"d-flex align-self-center pt-3\">\n        <img\n        [src]=\"getImagem(palestrante.user.imagemURL)\"\n        name=\"aboutme\"\n        width=\"120\"\n        height=\"120\"\n        class=\"rounded-circle\">\n      </div>\n      <div class=\"card-body\">\n        <div class=\"h4 text-center mb-3\">@{{palestrante.user.username}}</div>\n        <div class=\"h7 text-bold pb-1\"><b>Nome: </b>{{palestrante.user.primeiroNome +' '+ palestrante.user.ultimoNome}}</div>\n        <div class=\"h7\">\n          {{palestrante.miniCurriculo}}\n        </div>\n      </div>\n      <ul class=\"list-group list-group-flush\">\n        <li class=\"list-group-item\">\n          <div class=\"row\">\n            <div class=\"col-6 text-center border-right\">\n              <div class=\"h5\">0</div>\n              <div class=\"h6 text-muted\">Meus Eventos Criados</div>\n            </div>\n            <div class=\"col-6 text-center\">\n              <div class=\"h5\">0</div>\n              <div class=\"h6 text-muted\">Eventos como Participante</div>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\nimport { UserUpdate } from '@app/models/identity/UserUpdate';\nimport { AccountService } from '@app/services/account.service';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-perfil-detalhe',\n  templateUrl: './perfil-detalhe.component.html',\n  styleUrls: ['./perfil-detalhe.component.scss']\n})\nexport class PerfilDetalheComponent implements OnInit {\n  @Output() ChangeFormValue = new EventEmitter();\n  userUpdate = {} as UserUpdate;\n  formPerf!: FormGroup;\n\n  get f(): any{\n    return this.formPerf.controls;\n  }\n\n  constructor(private fb: FormBuilder,\n    public accountService: AccountService,\n    public palestranteService: PalestranteService,\n    private router: Router,\n    private toaster: ToastrService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.validation();\n    this.carregarUsuario();\n    this.carregarFormulario();\n  }\n\n  private carregarFormulario(): void{\n    this.formPerf.valueChanges\n                 .subscribe(() => this.ChangeFormValue.emit({ ... this.formPerf.value }))\n  }\n\n  private carregarUsuario(): void {\n    this.spinner.show();\n    this.accountService.getUser().subscribe(\n      (userRetorno: UserUpdate) => {\n        console.log(userRetorno);\n        this.userUpdate = userRetorno;\n        this.formPerf.patchValue(this.userUpdate);\n        this.toaster.success('Usuario Carregado', 'Sucesso!');\n      },\n      (error) => {\n        console.log(error);\n        this.toaster.error('Usuario invalido', 'Erro!');\n        this.router.navigate(['/dashboard']);\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n  private validation(): void{\n\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\n    };\n\n    this.formPerf = this.fb.group({\n      username: [''],\n      imagemURL: [''],\n      titulo: ['', Validators.required],\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required],\n      funcao: ['NaoInformado', Validators.required],\n      descricao: ['']\n    }, formOptions);\n  }\n\n  onSubmit(): void {\n    this.atualizarUsuario();\n  }\n\n  public atualizarUsuario(){\n    this.userUpdate = { ... this.formPerf.value }\n    this.spinner.show();\n\n    if(this.f.funcao.value == 'Palestrante'){\n      this.palestranteService.post().subscribe(\n        () => this.toaster.success('Função Palestrante Ativada!', 'Sucesso!'),\n        (error) => {\n          this.toaster.error('A Função Palestrante não pode ser Ativada!', 'Error');\n          console.log(error);\n        }\n      )\n    }\n\n    this.accountService.updateUser(this.userUpdate).subscribe(\n      () => this.toaster.success('Usuario atualizado', 'Sucesso!'),\n      (error) => {\n        this.toaster.error(error.error);\n        console.log(error);\n      }\n    ).add(() => this.spinner.hide())\n  }\n}\n","<form [formGroup]=\"formPerf\" (ngSubmit)=\"onSubmit()\">\n<div class=\"form-row\">\n  <div class=\"form-group col-12\">\n    <h3 class=\"border-bottom\">Detalhe Perfil</h3>\n  </div>\n  <div class=\"form-group col\">\n    <label>Título</label>\n    <select [ngClass]=\"{'is-invalid': f.titulo.errors && f.titulo.touched}\" formControlName=\"titulo\" class=\"form-control\">\n      <option value=\"NaoInformado\">Não Quero</option>\n      <option value=\"Tecnologo\">Tecnólogo(a)</option>\n      <option value=\"Bacharel\">Bacharel</option>\n      <option value=\"Especialista\">Especialista</option>\n      <option value=\"PosGraduado\">Pós Graduado(a)</option>\n      <option value=\"Mestrado\">Mestre</option>\n      <option value=\"Doutorado\">Doutor(a)</option>\n      <option value=\"PosDoutorado\">Pós Doc</option>\n    </select>\n    <div class=\"invalid-feedback\">\n      Escolha uma opção.\n    </div>\n  </div>\n  <div class=\"form-group col-sm-5\">\n    <label>Primeiro Nome</label>\n    <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched}\" formControlName=\"primeiroNome\"/>\n    <div class=\"invalid-feedback\">\n      Primeiro nome é obrigatório.\n    </div>\n  </div>\n  <div class=\"form-group col-sm-5\">\n    <label>Último nome</label>\n    <input type=\"text\" class=\"form-control\"\n    [ngClass]=\"{'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched}\"\n    formControlName=\"ultimoNome\"/>\n    <div class=\"invalid-feedback\">\n      Último nome é obrigatório.\n    </div>\n  </div>\n</div>\n<div class=\"form-row\">\n  <div class=\"form-group col-sm-5\">\n    <label>E-mail</label>\n    <input type=\"text\" class=\"form-control\"\n    [ngClass]=\"{'is-invalid': f.email.errors && f.email.touched}\"\n    formControlName=\"email\" />\n    <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\n      E-mail é obrigatório.\n    </div>\n    <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n      E-mail inválido.\n    </div>\n  </div>\n  <div class=\"form-group col-sm-4\">\n    <label>Telefone</label>\n    <input type=\"text\" class=\"form-control\"\n    [ngClass]=\"{'is-invalid': f.phoneNumber.errors && f.phoneNumber.touched}\"\n    formControlName=\"phoneNumber\" />\n    <div class=\"invalid-feedback\">\n      Telefone é obrigatório.\n    </div>\n  </div>\n  <div class=\"form-group col-sm\">\n    <label>Função</label>\n    <select formControlName=\"funcao\" class=\"form-control\"\n    [ngClass]=\"{'is-invalid': f.funcao.errors && f.funcao.touched}\">\n    <option value=\"NaoInformado\">Não Informado</option>\n    <option value=\"Participante\">Participante</option>\n    <option value=\"Palestrante\">Palestrante</option>\n  </select>\n</div>\n<div class=\"form-group col-12\">\n  <label>Descrição</label>\n  <input type=\"text\" formControlName=\"descricao\" class=\"form-control\" />\n</div>\n</div>\n<div>\n  <h3 class=\"pt-3 border-bottom\">Mudar Senha</h3>\n  <p>Caso mude de senha, preencha os campos abaixo:</p>\n</div>\n<div class=\"form-row\">\n  <div class=\"form-group col-sm\">\n    <label>Senha</label>\n    <input type=\"password\" class=\"form-control\"\n    [ngClass]=\"{'is-invalid': f.password.errors && f.password.touched}\"\n    formControlName=\"password\"/>\n    <div *ngIf=\"f.password.errors?.required && f.password.touched\" class=\"invalid-feedback\">\n      Senha é obrigatório.\n    </div>\n    <div *ngIf=\"f.password.errors?.minlength && f.password.touched\" class=\"invalid-feedback\">\n      A senha deve ter no mínimo 6 caracteres.\n    </div>\n  </div>\n  <div class=\"form-group col-sm\">\n    <label>Confirmar Senha</label>\n    <input type=\"password\" class=\"form-control\"\n    [ngClass]=\"{'is-invalid': f.confirmPassword.errors && f.confirmPassword.touched}\"\n    formControlName=\"confirmPassword\"/>\n    <div *ngIf=\"f.confirmPassword.errors?.required && f.confirmPassword.touched\" class=\"invalid-feedback\">\n      Confirmar a senha é obrigatório.\n    </div>\n    <div *ngIf=\"f.confirmPassword.errors?.mustMatch && f.confirmPassword.touched\" class=\"invalid-feedback\">\n      As senhas devem ser iguais.\n    </div>\n  </div>\n</div>\n\n<div class=\"card-footer\">\n  <div class=\"d-flex\">\n    <button class=\"btn btn-outline-secondary mr-auto border\">\n      Cancelar Alteração\n    </button>\n    <button class=\"btn btn-success\" type=\"submit\">\n      <!--<span class=\"spinner-border spinner-border-sm mr-1\"></span>-->\n      Salvar Alteração\n    </button>\n  </div>\n</div>\n</form>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Lote } from '@app/models/Lote';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class LoteService {\n\n  baseURL = 'https://localhost:5001/api/Lotes';\n\n  constructor(private http: HttpClient,\n              private fb: FormBuilder) { }\n\n  public getLotesByEventoId(eventoId: number): Observable<Lote[]> {\n    return this.http\n           .get<Lote[]>(`${this.baseURL}/${eventoId}`)\n           .pipe(take(1));\n  }\n\n  public saveLote(eventoId: number, lotes: Lote[]): Observable<Lote[]> {\n    return this.http\n           .put<Lote[]>(`${this.baseURL}/${eventoId}`, lotes)\n           .pipe(take(1));\n  }\n\n  public deleteLote(eventoId: number, loteId: number): Observable<any> {\n    return this.http\n           .delete(`${this.baseURL}/${eventoId}/${loteId}`)\n           .pipe(take(1));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'https://localhost:5001/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss']\n})\nexport class EventosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-titulo [titulo]=\"'Eventos'\"\n            [iconClass]=\"'fa fa-calendar-alt'\"\n            [botaoListar]=\"true\">\n</app-titulo>\n<router-outlet></router-outlet>\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-white shadow-sm\" *ngIf=\"showMenu()\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" routerLink=\"home\">\n      <i class=\"fa fa-users mb-2\"></i>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"isCollapsed = !isCollapsed\"\n    [attr.aria-expanded]=\"!isCollapsed\" aria-controls=\"collapseBasic\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\">\n      <ul class=\"navbar-nav\">\n        <ng-container *ngIf=\"(accountService.currentUser$ | async) != null\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLinkActive=\"active\" aria-current=\"page\" routerLink=\"dashboard\">Dashboard</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLinkActive=\"active\" aria-current=\"page\" routerLink=\"eventos/lista\">Eventos</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"palestrantes\">Palestrantes</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"contatos\">Contatos</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <div *ngIf=\"(accountService.currentUser$ | async) == null\" class=\"navbar-nav mr-3 d-xs-none d-none d-md-block\">\n      <a class=\" btn btn-light mr-2 border\" routerLink=\"/user/login\">Entrar</a>\n      <a class=\" btn btn-warning\" routerLink=\"/user/registration\">Me Cadastrar</a>\n    </div>\n    <div *ngIf=\"(accountService.currentUser$ | async) != null\" class=\"btn-group d-flex p-3\" dropdown>\n      <button *ngIf=\"(accountService.currentUser$ | async) as user\" id=\"button-basic\" dropdownToggle type=\"button\" class=\"btn dropdown-toggle\"\n              aria-controls=\"dropdown-basic\">\n        {{ user.username | titlecase }}\n      </button>\n      <ul id=\"dropdown-basic\" *dropdownMenu class=\"dropdown-menu dropdown-menu-right\"\n          role=\"menu\" aria-labelledby=\"button-basic\">\n        <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"user/perfil\">Perfil</a></li>\n        <li role=\"menuitem\"><a class=\"dropdown-item\" (click)=\"logout()\" style=\"cursor: pointer;\">Sair</a></li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccountService } from '@app/services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  isCollapsed = true;\n\n  constructor(private route: Router,\n              public accountService: AccountService) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(): void{\n    this.accountService.logout();\n    this.route.navigateByUrl('/user/login');\n  }\n\n  showMenu(): boolean{\n    return this.route.url !== '/user/login';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Home'\" [iconClass]=\"'fa-solid fa-house-chimney'\"></app-titulo>\n","export class Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T>{\n  result: T;\n  pagination: Pagination;\n}\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RedeSocial } from '@app/models/RedeSocial';\nimport { RedeSocialService } from '@app/services/redeSocial.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-redesSociais',\n  templateUrl: './redesSociais.component.html',\n  styleUrls: ['./redesSociais.component.scss']\n})\nexport class RedesSociaisComponent implements OnInit {\n  modalRef: BsModalRef;\n  @Input() eventoId = 0;\n  public formRS: FormGroup;\n  public redeSocialAtual = {id: 0, nome: '', indice: 0};\n\n  constructor(\n    private fb: FormBuilder,\n    private modalService: BsModalService,\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService,\n    private redeSocialService: RedeSocialService\n    ) { }\n\n    ngOnInit() {\n      this.carregarRedesSociais(this.eventoId);\n      this.validation();\n    }\n\n    public get redesSociais(): FormArray {\n      return this.formRS.get('redesSociais') as FormArray;\n    }\n\n    private carregarRedesSociais(id: number = 0): void {\n\n      let origem = 'palestrante'\n\n      if(this.eventoId != 0) origem = 'evento';\n\n      this.spinner.show();\n      this.redeSocialService\n          .getRedesSociais(origem, id)\n          .subscribe(\n            (redeSocialRetorno: RedeSocial[]) => {\n              redeSocialRetorno.forEach((redeSocial) => {\n                this.redesSociais.push(this.criarRedeSocial(redeSocial))\n              })\n            },\n            (error: any) => {\n              this.toastr.error('Erro ao tentar carregar Rede Social', 'Erro');\n              console.error(error);\n            }\n          ).add(() => this.spinner.hide());\n    }\n\n    public validation(): void {\n        this.formRS = this.fb.group({\n        redesSociais: this.fb.array([])\n      })\n    }\n\n\n    public cssValidator(campoForm: FormControl | AbstractControl) : any {\n      return {'is-invalid': campoForm.errors && campoForm.touched }\n    }\n\n    criarRedeSocial(redeSocial: RedeSocial): FormGroup{\n      return this.fb.group({\n        id: [redeSocial.id],\n        nome: [redeSocial.nome, Validators.required],\n        url: [redeSocial.url, Validators.required]\n      });\n    }\n\n    public retornaTitulo(titulo: string): string{\n      return  titulo === null || titulo === '' ? 'Rede Social' : titulo;\n    }\n\n    public salvarRedesSociais(): void{\n      let origem = 'palestrante'\n\n      if(this.eventoId != 0) origem = 'evento';\n\n      if(this.formRS.controls.redesSociais.valid){\n        this.spinner.show();\n\n        this.redeSocialService.saveRedesSociais(origem, this.eventoId, this.formRS.value.redesSociais)\n        .subscribe(\n          () => {\n            this.toastr.success('Rede Social adicionada com sucesso!', 'Sucesso!');\n          },\n          (error: any) => {\n            this.toastr.error('Erro ao adicionar a Rede Social!', 'Erro!');\n            console.log(error);\n          }\n          ).add(() => this.spinner.hide());\n        }\n      }\n\n      adicionarRedeSocial(): void{\n        this.redesSociais.push(this.criarRedeSocial({id: 0} as RedeSocial));\n      }\n\n      public removerRedeSocial(template: TemplateRef<any>, indice: number): void{\n\n        this.redeSocialAtual.id = this.redesSociais.get(indice + '.id').value;\n        this.redeSocialAtual.nome = this.redesSociais.get(indice + '.nome').value;\n        this.redeSocialAtual.indice = indice;\n\n        this.modalRef = this.modalService.show(template, {class:'modal-sm'})\n      }\n\n      public confirmDelete(): void{\n      let origem = 'palestrante';\n      this.modalRef.hide();\n      this.spinner.show();\n\n      if(this.eventoId != 0) origem = 'evento';\n\n        this.redeSocialService.deleteRedeSocial(origem, this.eventoId, this.redeSocialAtual.id).subscribe(\n          () => {\n            this.toastr.success('Sucesso ao deletar a Rede Social.', 'Sucesso!');\n            this.redesSociais.removeAt(this.redeSocialAtual.indice);\n          },\n          (error: any) => {\n            this.toastr.error(`Erro ao tentar deletar a Rede Social ${this.redeSocialAtual.id}`, 'Erro!');\n            console.log(error);\n          }\n          ).add(() => this.spinner.hide())\n        }\n\n        public declineDelete(): void{\n          this.modalRef.hide();\n        }\n\n      }\n","<p>Clique em Rede Social para adicionar e preencher novas Redes Sociais</p>\n<div class=\"form-row p-1\">\n  <div [formGroup]=\"formRS\" class=\"col\">\n    <div formArrayName=\"redesSociais\" *ngFor=\"let redeSocial of redesSociais.controls; let i=index\">\n      <fieldset [formGroupName]=\"i\" class=\"form-group\">\n        <legend class=\"d-flex justify-content-between capitalize\">\n          {{ retornaTitulo(redesSociais.get(i+'.nome').value) }}\n          <button class=\"btn btn-sm btn-warning mb-1\" (click)=\"removerRedeSocial(template, i)\">remove</button>\n        </legend>\n        <div class=\"row\">\n          <div class=\"form-group col-md-4\">\n            <label>Nome</label>\n            <select class=\"form-control\" [ngClass]=\"cssValidator(redesSociais.get(i+'.nome'))\" formControlName=\"nome\">\n              <option value=\"\">Selecione</option>\n              <option value=\"fab fa-youtube\">Youtube</option>\n              <option value=\"fab fa-instagram\">Instagram</option>\n              <option value=\"fab fa-facebook\">Facebook</option>\n              <option value=\"fab fa-twitter\">Twitter</option>\n              <option value=\"fab fa-google\">Google</option>\n              <option value=\"fab fa-linkedin\">Linkedin</option>\n              <option value=\"fab fa-pinterest\">Pinterest</option>\n              <option value=\"fab fa-whatsapp\">Whatsapp</option>\n              <option value=\"fab fa-telegram\">Telegram</option>\n              <option value=\"fab fa-skype\">Skype</option>\n              <option value=\"fab fa-vimeo\">Vimeo</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-8\">\n            <label>Link</label>\n            <input type=\"text\" prefix=\"http://\" mask=\"\" [ngClass]=\"cssValidator(redesSociais.get(i+'.url'))\"\n              formControlName=\"url\" class=\"form-control\" placeholder=\"URL\">\n          </div>\n        </div>\n      </fieldset>\n    </div>\n    <button (click)=\"adicionarRedeSocial()\" class=\"d-flex btn btn-outline-primary\">\n      <i class=\"fa fa-plus-circle my-1\"></i>\n      <b class=\"ml-1\">Rede Social</b>\n    </button>\n  </div>\n</div>\n\n<div class=\"card-footer\">\n  <div class=\"d-flex\">\n    <button class=\"btn btn-outline-secondary mr-auto border\">\n      Cancelar Alteração\n    </button>\n    <button [disabled]=\"!formRS.controls.redesSociais.valid\" (click)=\"salvarRedesSociais()\" class=\"btn btn-success\">\n      Salvar Redes Sociais\n    </button>\n  </div>\n</div>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar {{this.redeSocialAtual.nome}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDelete()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDelete()\">Não</button>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Evento } from '@app/models/Evento';\nimport { EventoService } from '@app/services/evento.service';\nimport { environment } from '@enviroments/environment';\nimport { PaginatedResult, Pagination } from '@app/models/Pagination';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-evento-lista',\n  templateUrl: './evento-lista.component.html',\n  styleUrls: ['./evento-lista.component.scss']\n})\nexport class EventoListaComponent implements OnInit {\n\n  modalRef?: BsModalRef;\n\n  public eventos : Evento[] = [];\n  public widthImg : number = 150;\n  public marginImg : number = 2;\n  public exibirImagem : boolean = true;\n  public eventosFiltrados : Evento[] = [];\n\n  public pagination = {} as Pagination;\n\n  public eventoId = 0;\n\n  termoBuscaChanged: Subject<string> = new Subject<string>();\n\n  public filtrarEventos(evt: any): void{\n    if(this.termoBuscaChanged.observers.length === 0){\n      this.termoBuscaChanged.pipe(debounceTime(1000)).subscribe(\n        (filtrarPor) => {\n            this.spinner.show();\n            this.eventoService\n            .getEvento(\n            this.pagination.currentPage,\n            this.pagination.itemsPerPage,\n            filtrarPor\n            ).subscribe(\n            (paginatedResult: PaginatedResult<Evento[]>) => {\n              this.eventos = paginatedResult.result;\n              this.pagination = paginatedResult.pagination;\n            },\n            (error: any) => {\n              this.spinner.hide();\n              this.toastr.error('Erro ao carregar os eventos', 'Erro!');\n            }\n        ).add(() => this.spinner.hide());\n        }\n      )\n    }\n    this.termoBuscaChanged.next(evt.value);\n  }\n\n  constructor(private eventoService: EventoService,\n              private modalService: BsModalService,\n              private toastr: ToastrService,\n              private spinner: NgxSpinnerService,\n              private router: Router\n              ) { }\n\n  public ngOnInit(): void{\n    //Definir a paginação antes de carregar os eventos, a ordem importa!\n    this.pagination = {currentPage: 1, itemsPerPage: 3, totalItems: 1} as Pagination;\n    this.carregarEventos();\n  }\n\n  public alterarImagem(): void{\n    this.exibirImagem = !this.exibirImagem;\n  }\n\n  public mostraImagem(imagemURL: string): string{\n    return (imagemURL !== '')\n    ? `${environment.apiURL}resources/images/${imagemURL}`\n    : '/assets/img/noImage.png';\n  }\n\n  public carregarEventos(): void{\n    /** spinner starts on init */\n    this.spinner.show();\n    this.eventoService.getEvento(this.pagination.currentPage, this.pagination.itemsPerPage).subscribe(\n      (paginatedResult: PaginatedResult<Evento[]>) => {\n        this.eventos = paginatedResult.result;\n        this.pagination = paginatedResult.pagination;\n      },\n      (error: any) => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao carregar os eventos', 'Erro!');\n      }\n  ).add(() => this.spinner.hide());\n\n  }\n\n  public pageChanged(event): void{\n    this.pagination.currentPage = event.page;\n    this.carregarEventos();\n  }\n\n  openModal(event: any, template: TemplateRef<any>, eventoId: number) {\n    this.eventoId = eventoId;\n    event.stopPropagation();\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirm(): void {\n    this.modalRef?.hide();\n    this.spinner.show();\n\n    this.eventoService.deleteEvento(this.eventoId).subscribe(\n      (result: any) => {\n        console.log(result);\n        if(result.message === 'Deletado'){\n          this.toastr.success(`O evento foi deletado com sucesso!`, 'Deletado!');\n          this.carregarEventos();\n        }\n      },\n      (error: any) => {\n        console.error(error);\n        this.toastr.error(`O evento de código ${this.eventoId} não foi deletado!`, \"Erro!\")\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n  decline(): void {\n    this.modalRef?.hide();\n  }\n\n  detalheEvento(id: number): void{\n    this.router.navigate([`eventos/detalhe/${id}`]);\n  }\n\n}\n","<div class=\"card rounded shadow-sm p-3\">\n  <div class=\"d-flex\">\n    <div class=\"flex-fill pr-3\">\n      <div class=\"form-group mb-2\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text\">Filtro: </div>\n          <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Filtrar por Tema e Local\"\n        (input)=\"filtrarEventos($event.target)\">\n        </div>\n\n      </div>\n    </div>\n    <div>\n      <a class=\"d-flex btn btn-outline-primary\" routerLink=\"/eventos/detalhe\">\n        <i class=\"fa fa-plus-circle my-1\"></i>\n        <b class=\"ml-1 d-none d-sm-block\">Novo</b>\n      </a>\n    </div>\n  </div>\n  <table class=\"table table-striped\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th class=\"d-none d-md-table-cell\">\n          <button class=\"btn btn-outline-light btn-sm\" (click)=\"alterarImagem()\">\n            <i class=\"{{!exibirImagem ? 'fa-solid fa-eye' : 'fa-sharp fa-solid fa-eye-slash'}}\"></i>\n            {{!exibirImagem ? 'Exibir' : 'Ocultar'}}\n          </button>\n        </th>\n        <th>#</th>\n        <th>Tema</th>\n        <th class=\"d-none d-md-table-cell\">Local</th>\n        <th>Data</th>\n        <th class=\"d-none d-md-table-cell\">Qtd Pessoas</th>\n        <th class=\"d-none d-md-table-cell\">Lote</th>\n        <th>Opções</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"eventos && eventos.length\">\n      <tr *ngFor=\"let evento of eventos\" (click)=\"detalheEvento(evento.id)\" style=\"cursor: pointer;\">\n        <td class=\"d-none d-md-table-cell\">\n          <img [collapse]=\"!exibirImagem\"\n          [isAnimated]=\"true\"\n          [src]=\"mostraImagem(evento.imagemURL)\"\n          [style.width.px]=\"widthImg\"\n          [style.margin.px] = \"marginImg\"\n          >\n        </td>\n        <td>{{evento.id}}</td>\n        <td>{{evento.tema}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.local}}</td>\n        <td>{{evento.dataEvento | DateTimeFormat}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.qtdPessoas}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.lote[0]?.nome}}</td>\n        <td>\n          <button type=\"button\" class=\"fa-solid fa-trash btn-outline-danger btn-lg\" tooltip=\"Excluir\" (click)=\"openModal($event, template, evento.id)\"></button>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot *ngIf=\"!eventos.length\">\n      <tr>\n        <td colspan=\"8\" class=\"text-center\">\n          <h4>Nenhum Evento Encontrado!</h4>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n<div class=\"d-flex justify-content-center\">\n  <pagination\n  [boundaryLinks]=\"true\"\n  [(ngModel)]=\"pagination.currentPage\"\n  [itemsPerPage]=\"pagination.itemsPerPage\"\n  [totalItems]=\"pagination.totalItems\"\n  (pageChanged)=\"pageChanged($event)\"\n  pageBtnClass=\"btn\"\n\n  previousText=\"&lsaquo;\"\n  nextText=\"&rsaquo;\"\n  firstText=\"&laquo;\"\n  lastText=\"&raquo;\">\n\n  </pagination>\n</div>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar o evento de código {{this.eventoId}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\" >Não</button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\nimport { User } from '@app/models/identity/User';\nimport { AccountService } from '@app/services/account.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  user = {} as User;\n  formReg!: FormGroup;\n\n  get f(): any{\n    return this.formReg.controls;\n  }\n\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private router: Router,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation(): void{\n\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\n    };\n\n    this.formReg = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required]\n    }, formOptions);\n  }\n\n  public cssValidator(campoForm: FormControl): any{\n    return {'is-invalid': campoForm.errors && campoForm.touched}\n  }\n\n  register(): void {\n    this.user = { ...this.formReg.value };\n    this.accountService.register(this.user).subscribe(\n      () => this.router.navigateByUrl('/dashboard'),\n      (error: any) => this.toastr.error(error.error)\n    )\n  }\n\n}\n","<div class=\"row mt-4\">\n\n  <div class=\"col-md-6 d-none d-md-block\" style=\"height: 450px;\">\n    <div class=\"text-center col-md-12 my-auto side-heder\">\n      <h1>Cadastro de Usuário</h1>\n      <img src=\"../../../../assets/registerImage.png\" class=\"my-4\" alt=\"\" width=\"400px\">\n    </div>\n  </div>\n\n  <div class=\"col-md-6\">\n\n    <form class=\"p-1\" [formGroup]=\"formReg\" (ngSubmit)=\"register()\">\n      <div class=\"pb-2 d-block d-md-none\">\n        <h3 class=\"border-bottom\">Cadastro de Usuário</h3>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label>Primeiro Nome</label>\n          <input type=\"text\" class=\"form-control\"\n          formControlName=\"firstName\"\n          [ngClass]=\"cssValidator(f.firstName)\" placeholder=\"Insira o Primeiro nome\" />\n          <div class=\"invalid-feedback\">\n            Nome é obrigatório.\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label>Último nome</label>\n          <input type=\"text\" class=\"form-control\"\n          formControlName=\"lastName\"\n          [ngClass]=\"cssValidator(f.lastName)\"\n          placeholder=\"Insira o Último nome\" />\n          <div *ngIf=\"f.lastName.errors?.required\" class=\"invalid-feedback\">\n            Último nome é obrigatório.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Email:</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"email\"\n        [ngClass]=\"{'is-invalid': f.email.errors && f.email.touched}\"\n        placeholder=\"Insira o e-mail\" />\n        <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\n          E-mail é obrigatório.\n        </div>\n        <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n          Endereço de e-mail inválido.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Usuário:</label>\n        <input class=\"form-control\" type=\"text\"\n        formControlName=\"userName\"\n        [ngClass]=\"{'is-invalid': f.userName.errors && f.userName.touched}\"\n        placeholder=\"Insira o nome de Usuário\" />\n        <div *ngIf=\"f.userName.errors?.required && f.userName.touched\" class=\"invalid-feedback\">\n          Usuário é obrigatório.\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Senha:</label>\n          <input class=\"form-control\" type=\"password\"\n          formControlName=\"password\"\n          [ngClass]=\"{'is-invalid': f.password.errors && f.password.touched}\"\n          placeholder=\"Digite uma Senha\" />\n          <div *ngIf=\"f.password.errors?.required && f.password.touched\" class=\"invalid-feedback\">\n            Senha é obrigatório.\n          </div>\n          <div *ngIf=\"f.password.errors?.minlength && f.password.touched\" class=\"invalid-feedback\">\n            A Senha deve ter no mínimo 6 caracteres.\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Confirmar Senha:</label>\n          <input class=\"form-control\" type=\"password\"\n          formControlName=\"confirmPassword\"\n          [ngClass]=\"{'is-invalid': f.confirmPassword.errors && f.confirmPassword.touched}\"\n          placeholder=\"Confirme a Senha\" />\n          <div *ngIf=\"f.confirmPassword.errors?.required && f.confirmPassword.touched\" class=\"invalid-feedback\">\n            Confirmar senha é obrigatório.\n          </div>\n          <div *ngIf=\"f.confirmPassword.errors?.mustMatch && f.confirmPassword.touched\" class=\"invalid-feedback\">\n            As senhas devem ser iguais.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row p-1 mb-3\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n          <label class=\"custom-control-label\">Eu concordo com os <a href=\"#\">Termos de Uso</a>.</label>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <button [disabled]=\"!formReg.valid\" class=\"btn btn-lg btn-success btn-block px-5\" type=\"submit\">\n            Registar\n          </button>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <a class=\"btn btn-link btn-block\" routerLink=\"/user/login\">\n            Já sou Cadastrado\n          </a>\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Dashboard'\" [iconClass]=\"'fa-solid fa-chart-column'\"></app-titulo>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { Evento } from '@app/models/Evento';\nimport { Lote } from '@app/models/Lote';\nimport { EventoService } from '@app/services/evento.service';\nimport { LoteService } from '@app/services/lote.service';\nimport { environment } from '@enviroments/environment';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-evento-detalhe',\n  templateUrl: './evento-detalhe.component.html',\n  styleUrls: ['./evento-detalhe.component.scss']\n})\nexport class EventoDetalheComponent implements OnInit {\n\n  modalRef: BsModalRef;\n  evento = {} as Evento;\n  form!: FormGroup;\n  estadoSalvar = 'post';\n  eventoId : number;\n  loteAtual = {id: 0, nome: '', indice: 0};\n  imagemURL = 'assets/img/upload.png';\n  file : File;\n\n  get modoEditar(): boolean{\n    return this.estadoSalvar === 'put';\n  }\n\n  get f(): any{\n    return this.form.controls;\n  }\n\n  get lotes(): FormArray{\n    return this.form.get('lotes') as FormArray;\n  }\n\n  get bsConfig(): any{\n    return {\n      adaptivePosition: true,\n      dateInputFormat: 'DD/MM/YYYY hh:mm a',\n      showWeekNumbers: false,\n      containerClass: 'theme-default'\n    }\n  }\n\n  get bsConfigLote(): any{\n    return {\n      adaptivePosition: true,\n      dateInputFormat: 'DD/MM/YYYY',\n      showWeekNumbers: false,\n      containerClass: 'theme-default'\n    }\n  }\n\n  constructor(private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private ActivatedRouter: ActivatedRoute,\n              private eventoService: EventoService,\n              private spinner: NgxSpinnerService,\n              private toastr: ToastrService,\n              private router: Router,\n              private loteService: LoteService,\n              private modalService: BsModalService)\n  {\n  this.localeService.use('pt-br');\n  }\n\n  public mudarValorData(value: Date, indice: number, campo: string): void{\n    this.lotes.value[indice][campo] = value;\n  }\n\n  public carregarEvento(): void{\n    this.eventoId = +this.ActivatedRouter.snapshot.paramMap.get('id');\n\n    if(this.eventoId !== null && this.eventoId != 0){\n      this.spinner.show();\n\n      this.estadoSalvar = 'put';\n\n      this.eventoService.getEventoById(this.eventoId).subscribe(\n        (evento: Evento) => {\n          this.evento = {... evento};\n          this.form.patchValue(this.evento);\n          if(this.evento.imagemURL !== ''){\n            this.imagemURL = environment.apiURL + 'resources/images/' + this.evento.imagemURL;\n          }\n          this.carregarLotes();\n        },\n        (error: any) => {\n          this.spinner.hide();\n          this.toastr.error('Erro ao tentar carregar evento.', 'Erro!')\n          console.error(error);\n        },\n        () => this.spinner.hide(),\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.carregarEvento();\n    this.validation();\n  }\n\n  public validation(): void{\n    this.form = this.fb.group({\n      local: ['', Validators.required],\n      dataEvento: ['', Validators.required],\n      tema: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n      qtdPessoas: ['', [Validators.required, Validators.max(120000)]],\n      imagemURL: [''],\n      telefone: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      lotes : this.fb.array([])\n    });\n  }\n  resetForm(): void{\n    this.form.reset();\n  }\n\n  public cssValidator(campoForm: FormControl | AbstractControl) : any {\n    return {'is-invalid': campoForm.errors && campoForm.touched }\n  }\n\n  public salvarEventos(): void{\n    if(this.form.controls.lotes.valid){\n    this.spinner.show();\n  }\n\n    if(this.form.valid){\n      this.evento = (this.estadoSalvar === 'post')\n                    ? {... this.form.value}\n                    : {id: this.evento.id, ... this.form.value};\n\n      this.eventoService[this.estadoSalvar](this.evento).subscribe(\n        (eventoRetorno: Evento) => {\n          this.router.navigate([`eventos/detalhe/${eventoRetorno.id}`])\n          this.toastr.success('O evento foi salvo com sucesso!', 'Sucesso')\n        },\n        (error: any) => {\n          console.error(error);\n          this.toastr.error('O evento não foi salvo!', 'Erro!');\n        }\n      ).add(() => this.spinner.hide());\n    }\n  }\n\n  adicionarLotes(): void{\n    this.lotes.push(this.criarLote({id: 0} as Lote));\n  }\n\n  criarLote(lote: Lote): FormGroup{\n    return this.fb.group({\n      id: [lote.id],\n      nome: [lote.nome, Validators.required],\n      preco: [lote.preco, Validators.required],\n      dataini: [lote.dataInicio],\n      datafim: [lote.dataFim],\n      qtd: [lote.quantidade, Validators.required]\n    });\n  }\n\n  public salvarLotes(): void{\n    this.spinner.show();\n    if(this.form.controls.lotes.valid){\n      console.log(this.form.value.lotes)\n      this.loteService.saveLote(this.eventoId, this.form.value.lotes)\n                      .subscribe(\n                        () => {\n                          this.toastr.success('Lote adicionado com sucesso!', 'Sucesso!');\n                        },\n                        (error: any) => {\n                          this.toastr.error('Erro ao adicionar o Lote!', 'Erro!');\n                          console.log(error);\n                        }\n                      ).add(() => this.spinner.hide());\n    }\n  }\n\n  public carregarLotes(): void{\n    this.loteService.getLotesByEventoId(this.eventoId).subscribe(\n      (lotesRetorno: Lote[]) => {\n        lotesRetorno.forEach(lote => {\n          this.lotes.push(this.criarLote(lote));\n        });\n      },\n      (error: any) => {\n        this.toastr.error('Erro ao tentar carregar lote.', 'Erro!');\n        console.log(error);\n      }\n    ).add(() => this.spinner.hide())\n  }\n\n  public removerLote(template: TemplateRef<any>, indice: number): void{\n    this.loteAtual.id = this.lotes.get(indice + '.id').value;\n    this.loteAtual.nome = this.lotes.get(indice + '.nome').value;\n    this.loteAtual.indice = indice;\n\n    this.modalRef = this.modalService.show(template, {class:'modal-sm'})\n  }\n\n  public retornaTituloLote(tituloLote: string): string{\n    return  tituloLote === null || tituloLote === '' ? 'Nome do Lote' : tituloLote;\n  }\n\n  public confirmDelete(): void{\n    this.modalRef.hide();\n    this.spinner.show();\n\n    this.loteService.deleteLote(this.eventoId, this.loteAtual.id).subscribe(\n      () => {\n        this.spinner.hide();\n        this.lotes.removeAt(this.loteAtual.indice);\n        this.toastr.success('Sucesso ao deletar o lote.', 'Sucesso!');\n      },\n      (error: any) => {\n        this.toastr.error('Erro ao tentar deletar o lote', 'Erro!');\n        console.log(error);\n      }\n    ).add(() => this.spinner.hide())\n  }\n\n  public declineDelete(): void{\n    this.modalRef.hide();\n  }\n\n  onFileChange(ev: any): void{\n    const reader = new FileReader();\n\n    reader.onload = (event: any) => this.imagemURL = event.target.result;\n\n    this.file = ev.target.files;\n    reader.readAsDataURL(this.file[0]);\n\n    this.uploadImage();\n  }\n\n  uploadImage(): void{\n    this.spinner.show();\n    this.eventoService.postUpload(this.eventoId, this.file).subscribe(\n      () => {\n        this.carregarEvento();\n        this.toastr.success('Sucesso ao carregar a imagem!', 'Sucesso!');\n      },\n      (error: any) => {\n        this.toastr.error('Erro ao carregar imagem', 'Error!');\n        console.log(error)\n      }\n    ).add(() => this.spinner.hide)\n\n  }\n}\n","<div class=\"row\">\n  <div [ngClass]=\"{'col-md-8 pr-0' : modoEditar, 'col-md-12' : !modoEditar}\">\n    <div class=\"card rounded shadow-sm\">\n      <form [formGroup] = \"form\">\n        <div class=\"p-3\">\n          <!--<p>Form value: {{form.value | json}}</p>\n            <p>Form value: {{form.status | json}}</p>-->\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-12\">\n                <label>Tema</label>\n                <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.tema)\"\n                formControlName=\"tema\" placeholder=\"Insira o Tema\" [(ngModel)]=\"evento.tema\">\n                <div *ngIf=\"f.tema.errors?.required\" class=\"invalid-feedback\">\n                  Tema é obrigatório.\n                </div>\n                <div *ngIf=\"f.tema.errors?.minlength\" class=\"invalid-feedback\">\n                  Tema deve ter no mínimo 4 caracteres.\n                </div>\n                <div *ngIf=\"f.tema.errors?.maxlength\" class=\"invalid-feedback\">\n                  Tema ter no máximo 50 caracteres.\n                </div>\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-8\">\n                <label>Local</label>\n                <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.local)\"\n                formControlName=\"local\" placeholder=\"\" [(ngModel)]=\"evento.local\">\n                <div *ngIf=\"f.local.errors?.required && f.local.touched\" class=\"invalid-feedback\">\n                  Local é obrigatório.\n                </div>\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Data e Hora</label>\n                <input type=\"datetime\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.dataEvento)\"\n                formControlName=\"dataEvento\" placeholder=\"\"\n                value=\"{{evento.dataEvento | DateTimeFormat}}\"\n                bsDatepicker\n                [bsConfig] = \"bsConfig\"\n                [(ngModel)]=\"evento.dataEvento\">\n                <div class=\"invalid-feedback\">\n                  Data e Hora é obrigatório.\n                </div>\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-2\">\n                <label>Qtd Pessoas</label>\n                <input type=\"number\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.qtdPessoas)\"\n                formControlName=\"qtdPessoas\" placeholder=\"\" [(ngModel)]=\"evento.qtdPessoas\">\n                <div *ngIf=\"f.qtdPessoas.errors?.required && f.qtdPessoas.touched\" class=\"invalid-feedback\">\n                  Quantidade de pessoas é obrigatório.\n                </div>\n                <div *ngIf=\"f.qtdPessoas.errors?.max && f.qtdPessoas.touched\" class=\"invalid-feedback\">\n                  Quantidade de pessoas deve ser menor que 120000\n                </div>\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Telefone</label>\n                <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.telefone)\"\n                formControlName=\"telefone\" placeholder=\"(000) 90000-0000\"\n                [(ngModel)]=\"evento.telefone\">\n                <div *ngIf=\"f.telefone.errors?.required && f.telefone.touched\" class=\"invalid-feedback\">\n                  Telefone é obrigatório.\n                </div>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label>Email</label>\n                <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"cssValidator(f.email)\"\n                formControlName=\"email\" placeholder=\"e-mail\"\n                [(ngModel)]=\"evento.email\">\n                <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\n                  Email é obrigatório.\n                </div>\n                <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n                  Deve ser um endereço de e-mail válido.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"d-flex\">\n              <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n                Cancelar Alteração\n              </button>\n              <button class=\"btn btn-success\" [disabled]=\"!form.valid\" (click)=\"salvarEventos()\">\n                <!--<span class=\"spinner-border spinner-border-sm mr-1\"></span>-->\n                Salvar Evento\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <br>\n      <div *ngIf=\"modoEditar\" class=\"card rounded shadow-sm mt-0\">\n        <div class=\"p-3\">\n          <div class=\"d-flex border-bottom\">\n            <h2 class=\"mr-auto\">\n              Lotes do Evento\n            </h2>\n            <h2>\n              <i class=\"fas fa-money-bill-wave\"></i>\n            </h2>\n          </div>\n          <p>Clique em Lote para adicionar e preencher novos Lotes</p>\n          <div [formGroup] = \"form\">\n            <!--<p>Form value: {{form.controls.lotes.value | json}}</p>\n              <p>Form value: {{form.controls.lotes.status | json}}</p>-->\n              <div formArrayName=\"lotes\" *ngFor=\"let lote of lotes.controls; let i=index\">\n                <fieldset [formGroupName]=\"i\" class=\"form-group\">\n                  <legend class=\"d-flex justify-content-between capitalize\">\n                    {{retornaTituloLote(lotes.get(i+'.nome').value)}}\n                    <button class=\"p-2 btn btn-sm btn-outline-warning mb-1 d-flex\"\n                    tooltip=\"Excluir Lote\"\n                    (click)=\"removerLote(template,i)\"\n                    [adaptivePosition]=\"false\"\n                    [delay]=\"500\"\n                    placement=\"left\">\n                    <i class=\"fa fa-window-close my-1\"></i>\n                    <b class=\"ml-1 d-none d-sm-block\">Excluir</b>\n                  </button>\n                </legend>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                    <label>Nome</label>\n                    <input type=\"text\" class=\"form-control\"\n                    [ngClass]=\"cssValidator(lotes.get(i+'.nome'))\"\n                    formControlName=\"nome\" placeholder=\"Lote\">\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                    <label>Quantidade</label>\n                    <input type=\"text\" class=\"form-control\"\n                    [ngClass]=\"cssValidator(lotes.get(i+'.qtd'))\"\n                    formControlName=\"qtd\" placeholder=\"000\">\n                  </div>\n                  <div class=\"form-group col-md-4\">\n                    <label>Preço</label>\n                    <input type=\"text\" class=\"form-control\"\n                    currencyMask\n                    [options]=\"{prefix: 'R$ ', thousands: '.', decimal: ',', align: 'left'}\"\n                    [ngClass]=\"cssValidator(lotes.get(i+'.preco'))\"\n                    formControlName=\"preco\" placeholder=\"R$ 0,00\">\n                  </div>\n                </div>\n                <div class=\"form-row\">\n                  <div class=\"form-group col-md-4\">\n                    <label>Data Inicio</label>\n                    <!--value=\"{{lotes.get(i+'.dataini').value | date:'dd/MM/yyyy'}}\"\n                      [ngClass]=\"cssValidator(lotes.get(i+'.dataini'))\"\n                      (bsValueChange)=\"mudarValorData($event, i, 'dataini')\"\n                      [bsConfig]=\"bsConfigLote\"-->\n                      <input type=\"datetime\" class=\"form-control\"\n                      placeholder=\"01/01/2019\"\n                      value=\"{{lotes.get(i+'.dataini').value}}\"\n                      formControlName=\"dataini\"\n                      >\n                    </div>\n                    <div class=\"form-group col-md-4\">\n                      <label>Data Fim</label>\n                      <input type=\"datetime\" class=\"form-control\"\n                      placeholder=\"01/01/2019\"\n                      value=\"{{lotes.get(i+'.datafim').value}}\"\n                      formControlName=\"datafim\">\n                    </div>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n            <button (click)=\"adicionarLotes()\" class=\"d-flex btn btn-outline-primary\">\n              <i class=\"fa fa-plus-circle my-1\"></i>\n              <b class=\"ml-1 d-none d-sm-block\">Lote</b>\n            </button>\n          </div>\n          <div class=\"card-footer\">\n            <div class=\"d-flex\">\n              <button class=\"btn btn-outline-secondary mr-auto border\">\n                Cancelar Alteração\n              </button>\n              <button class=\"btn btn-success\" (click)=\"salvarLotes()\" [disabled]=\"!form.controls.lotes.valid\">\n                <!--<span class=\"spinner-border spinner-border-sm mr-1\"></span>-->\n                Salvar lotes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"card rounded shadow-sm mt-3\" *ngIf=\"modoEditar\">\n        <div class=\"p-3\">\n          <div class=\"d-flex border-bottom\">\n            <h2 class=\"mr-auto\">\n              Redes Sociais do Evento\n            </h2>\n            <h2>\n              <i class=\"fas fa-share-square\"></i>\n            </h2>\n          </div>\n          <app-redesSociais [eventoId]=\"eventoId\"></app-redesSociais>\n        </div>\n      </div>\n</div>\n      <div class=\"col-md-4\" *ngIf=\"modoEditar\">\n\n        <div [formGroup]=\"form\" class=\"card-evento-view shadow-sm\">\n\n          <div class=\"form-row\">\n\n            <div class=\"form-group m-0\">\n\n              <input type=\"file\" #file (change)=\"onFileChange($event)\" class=\"form-control is-invalid\" placeholder=\"\" style=\"display: none\">\n\n            </div>\n\n          </div>\n\n          <div class=\"card profile-card-2\">\n\n            <div class=\"card-img-block\">\n\n              <img class=\"image\" [src]=\"imagemURL\" class=\"img-fluid\" (click)=\"file.click()\" alt=\"Card image cap\"\n\n              tooltip=\"Upload de Nova Imagem\" [adaptivePosition]=\"false\" placement=\"bottom\" />\n\n            </div>\n\n            <div class=\"card-body pt-3\">\n\n              <h4>{{evento.tema}}</h4>\n\n              <p class=\"card-text\">\n\n                <b>Local:</b> {{evento.local}}\n\n                <br>\n\n                <b>Data:</b> {{evento.dataEvento}}\n\n              </p>\n\n              <hr>\n\n              <p class=\"card-text\">\n\n                <b>Contatos</b><br>\n\n                <small class=\"text-muted\">Telefone: {{evento.telefone}}</small>\n\n                <br>\n\n                <small class=\"text-muted\">e-mail: {{evento.email}}</small>\n\n              </p>\n\n              <p class=\"card-text\">\n\n                Capacidade:\n\n                <small class=\"text-muted\">{{evento.qtdPessoas}}</small>\n\n              </p>\n\n              <div class=\"row\">\n\n                <div class=\"icon-block col-md-8 iconesSociais\">\n\n                  <a href=\"\">\n\n                    <i class=\"\"></i>\n\n                  </a>\n\n                </div>\n\n                <!--div class=\"col-md-4 d-flex justify-content-center\">\n\n                  <a href=\"#\" class=\"btn btn-outline-primary\">Participar</a>\n\n                </div-->\n\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n    <ng-template #template>\n      <div class=\"modal-body text-center\">\n        <p>Tem certeza que quer deletar o Lote de nome {{this.loteAtual.nome}}?</p>\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDelete()\" >Sim</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDelete()\" >Não</button>\n      </div>\n    </ng-template>\n\n\n","import { AbstractControl, FormGroup } from \"@angular/forms\";\n\nexport class ValidatorField {\n  static MustMatch(controlName: string, matchingControlName: string): any{\n    return (group: AbstractControl) => {\n      const formGroup = group as FormGroup;\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if(matchingControl.errors && !matchingControl.errors.MustMatch) {\n        return null;\n      }\n\n      if(control.value !== matchingControl.value){\n        matchingControl.setErrors({mustMatch: true});\n      } else {\n        matchingControl.setErrors(null);\n      }\n\n      return null;\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { AccountService } from './services/account.service';\nimport { User } from './models/identity/User';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ProEventos-App';\n\n  constructor( public accountService: AccountService){}\n\n  ngOnInit(): void{\n    this.setCurrentUser();\n  }\n\n  setCurrentUser(){\n    let user: User;\n\n    if(localStorage.getItem('user'))\n      user = JSON.parse(localStorage.getItem('user') ?? '{}');\n    else\n      user = null\n\n    if(user)\n      this.accountService.setCurrentUser(user);\n\n  }\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<!-- Toolbar -->\n<app-nav></app-nav>\n\n<div class=\"container-fluid\">\n<router-outlet></router-outlet>\n</div>\n\n<ngx-spinner\nbdColor=\"rgba(51,51,51,0.8)\"\nsize=\"medium\"\ncolor=\"#fff\"\ntype=\"ball-scale-multiple\"\n>\n<p style=\"font-size: 20px; color: white;\">Carregando...</p>\n</ngx-spinner>\n\n","export class Constants {\n  static readonly DATE_FMT = 'dd/MM/yyyy';\n  static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm a`;\n}\n","<h2>\n  {{titulo}}\n</h2>\n<hr>\n<div class=\"d-flex p-3 my-3 text-white bg-secondary rounded shadow-sm\">\n  <div class=\"d-flex align-items-center mr-auto\">\n    <i class=\"{{iconClass}} mr-3\"></i>\n    <div class=\"lh-1\">\n      <h2 class=\"mb-0\">{{titulo}}</h2>\n      <small>{{subtitulo}}</small>\n    </div>\n  </div>\n  <div class=\"p-3\" *ngIf=\"botaoListar\">\n    <button class=\"btn btn-outline-light\" (click)=\"listar()\">\n      Listar {{titulo}}\n    </button>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-titulo',\n  templateUrl: './titulo.component.html',\n  styleUrls: ['./titulo.component.scss']\n})\nexport class TituloComponent implements OnInit {\n  @Input() titulo : string | undefined;\n  @Input() iconClass = 'fa fa-user';\n  @Input() subtitulo = 'Desde 2021';\n  @Input() botaoListar = false;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  listar(): void{\n    this.router.navigate([`/${this.titulo?.toLowerCase()}/lista`])\n  }\n\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { defineLocale, ptBrLocale } from 'ngx-bootstrap/chronos';\nimport { deLocale } from 'ngx-bootstrap/locale';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgxCurrencyModule } from \"ngx-currency\";\n\nimport { AppComponent } from './app.component';\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\nimport { PalestranteDetalheComponent } from './components/palestrantes/palestrante-detalhe/palestrante-detalhe.component';\nimport { PalestranteListaComponent } from './components/palestrantes/palestrante-lista/palestrante-lista.component';\nimport { RedesSociaisComponent } from './components/redesSociais/redesSociais.component';\nimport { NavComponent } from './shared/nav/nav.component';\nimport { TituloComponent } from './shared/titulo/titulo.component';\nimport { ContatosComponent } from './components/contatos/contatos.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { PerfilDetalheComponent } from './components/user/perfil-detalhe/perfil-detalhe.component';\n\nimport { EventoService } from './services/evento.service';\nimport { LoteService } from './services/lote.service';\nimport { AccountService } from './services/account.service';\n\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\n\nimport { DateTimeFormatPipe } from './helpers/DateTimeFormat.pipe';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { HomeComponent } from './components/home/home.component';\n\ndefineLocale('pt-br', ptBrLocale);\n@NgModule({\n  declarations: [\n    AppComponent,\n      EventosComponent,\n      PalestrantesComponent,\n      PalestranteDetalheComponent,\n      PalestranteListaComponent,\n      RedesSociaisComponent,\n      NavComponent,\n      DateTimeFormatPipe,\n      TituloComponent,\n      ContatosComponent,\n      DashboardComponent,\n      PerfilComponent,\n      PerfilDetalheComponent,\n      EventoDetalheComponent,\n      EventoListaComponent,\n      UserComponent,\n      LoginComponent,\n      RegistrationComponent,\n      HomeComponent\n   ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CollapseModule.forRoot(),\n    TooltipModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true,\n      progressBar: true\n    }),\n    NgxSpinnerModule,\n    NgxCurrencyModule,\n    PaginationModule.forRoot(),\n    TabsModule.forRoot()\n  ],\n  providers: [EventoService,\n              LoteService,\n              AccountService,\n              { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   *\n   */\n  constructor(private router: Router,\n              private toastr: ToastrService) {\n\n  }\n\n  canActivate(): boolean {\n    if (localStorage.getItem('user') != null) return true;\n\n    this.toastr.info('Usuário não autenticado!');\n    this.router.navigate(['/user/login']);\n    return false;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '@app/models/identity/User';\nimport { UserUpdate } from '@app/models/identity/UserUpdate';\nimport { environment } from '@enviroments/environment';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable()\nexport class AccountService {\n  private currentUserSource = new ReplaySubject<User>(1);\n  public currentUser$ = this.currentUserSource.asObservable();\n\n  baseUrl = environment.apiURL + 'api/Account/'\n\nconstructor(private http: HttpClient) { }\n\npublic login(model: any): Observable<void> {\n  return this.http.post<User>(this.baseUrl + 'login', model).pipe(\n    take(1),\n    map((response: User) => {\n      const user = response;\n      if(user){\n        this.setCurrentUser(user);\n      }\n    })\n  );\n}\n\ngetUser(): Observable<UserUpdate> {\n  return this.http.get<UserUpdate>(this.baseUrl + 'getUser').pipe(take(1));\n}\n\nupdateUser(model: UserUpdate): Observable<void> {\n  return this.http.put<UserUpdate>(this.baseUrl + 'updateUser', model).pipe(\n    take(1),\n    map((user: UserUpdate) => {\n      this.setCurrentUser(user);\n    }\n    )\n  )\n}\npublic register(model: any): Observable<void> {\n  return this.http.post<User>(this.baseUrl + 'register', model).pipe(\n    take(1),\n    map((response: User) => {\n      const user = response;\n      if(user){\n        this.setCurrentUser(user);\n      }\n    })\n  );\n}\n\n\nlogout(): void {\n  localStorage.removeItem('user');\n  this.currentUserSource.next(null);\n  //this.currentUserSource.complete();\n}\n\npublic setCurrentUser(user: User): void {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n}\n\npublic postUpload(file: File): Observable<UserUpdate> {\n  const fileToUpload = file[0] as File;\n  const formData = new FormData();\n  formData.append('file', fileToUpload);\n\n  return this.http\n         .post<UserUpdate>(`${this.baseUrl}upload-image`, formData)\n         .pipe(take(1));\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-palestrante-detalhe',\n  templateUrl: './palestrante-detalhe.component.html',\n  styleUrls: ['./palestrante-detalhe.component.scss']\n})\nexport class PalestranteDetalheComponent implements OnInit {\n  form!: FormGroup;\n  public situacaodoForm = '';\n  public corDaDescricao = '';\n\n  constructor(\n    private fb: FormBuilder,\n    public palestranteService: PalestranteService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n    ) { }\n\n    ngOnInit() {\n      this.validation();\n      this.verificaForm();\n      this.carregarPalestrante();\n    }\n\n    private validation(): void{\n      this.form = this.fb.group({\n        miniCurriculo: ['']\n      })\n    }\n\n    private carregarPalestrante(): void {\n      this.spinner.show();\n\n      this.palestranteService\n      .getPalestrante()\n      .subscribe(\n        (palestrante: Palestrante) => {\n          this.form.patchValue(palestrante);\n        },\n        (error: any) => {\n          this.toastr.error('Erro ao carregar Palestrante', 'Erro')\n          console.log(error)\n        }\n      ).add(() => this.spinner.hide());\n\n    }\n\n    private verificaForm(): void {\n      this.form.valueChanges\n      .pipe(\n        map(() => {\n          this.situacaodoForm = 'O MiniCurriculo está sendo atualizado!';\n          this.corDaDescricao = 'text-warning';\n        }),\n        debounceTime(1000),\n        tap(() => this.spinner.show())\n        ).subscribe(() => {\n          this.palestranteService.put({ ...this.form.value }).subscribe(\n            () => {\n              this.situacaodoForm = 'O MiniCurriculo foi atualizado!'\n              this.corDaDescricao = 'text-success'\n\n              setTimeout(() => {\n                this.situacaodoForm = 'O MiniCurriculo foi carregado!';\n                this.corDaDescricao = 'text-muted';\n              }, 2000)\n            },\n            () => {\n              this.toastr.error('Erro ao tentar atualizar Palestrante!', 'Erro')\n            }\n            ).add(() => this.spinner.hide())\n          });\n        }\n\n        public get f(): any{\n          return this.form.controls;\n        }\n      }\n","<form [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label>Minicurrículo</label>\n    <textarea type=\"text\" formControlName=\"miniCurriculo\" class=\"form-control\"\n     [ngClass]=\"{ 'is-invalid': f.miniCurriculo.errors && f.miniCurriculo.touched }\"></textarea>\n     <small class=\"form-text\"\n      [ngClass]=\"corDaDescricao\">{{situacaodoForm}}</small>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserLogin } from '@app/models/identity/UserLogin';\nimport { AccountService } from '@app/services/account.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  model = {} as UserLogin;\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public login(): void {\n    this.spinner.show();\n    this.accountService.login(this.model).subscribe(\n      () => {\n        this.router.navigateByUrl('/dashboard');\n        this.spinner.hide();\n      },\n      (error: any) => {\n        if(error.status == 401)\n          this.toastr.error(\"Usuário ou senha inválidos.\");\n        else\n          console.log(error);\n      }\n    );\n  }\n\n}\n","<div class=\"d-flex align-items-center vh-100\">\n\n\t<div class=\"mx-auto text-center shadow-sm bg-white rounded p-5 my-5\">\n\n\t\t<form #loginForm=\"ngForm\" class=\"form-signin\" (ngSubmit)=\"login()\">\n\t\t\t<i class=\"fa fa-users mb-2\"></i>\n\t\t\t<h1 class=\"h3 mb-3 font-weight-normal\">Entrar com</h1>\n\t\t\t<label for=\"username\" class=\"sr-only\">Usuário</label>\n\t\t\t<input\n        [(ngModel)] = \"model.username\"\n        type=\"email\"\n        id=\"username\"\n        class=\"form-control\"\n        placeholder=\"Usuário\"\n        name=\"username\"\n        required>\n\t\t\t<label for=\"password\" class=\"sr-only\">Password</label>\n\t\t\t<input\n        [(ngModel)] = \"model.password\"\n        type=\"password\"\n        id=\"password\"\n        class=\"form-control\"\n        placeholder=\"Senha\"\n        name=\"password\"\n        required>\n\t\t\t<button class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"loginForm.invalid\" type=\"submit\">Entrar</button>\n\t\t\t<p class=\"mt-4 mb-2 text-muted\">Não tem login? Cadastre-se abaixo</p>\n\t\t\t<a class=\"btn btn-lg btn-link btn-block\" routerLink=\"/user/registration\">Quero me cadastrar</a>\n\t\t</form>\n\n\t</div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { User } from '@app/models/identity/User';\nimport { AccountService } from '@app/services/account.service';\nimport { catchError, take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      currentUser = user\n\n      if(currentUser){\n        request = request.clone(\n          {\n            setHeaders:{\n              Authorization: `Bearer ${currentUser.token}`\n            }\n          }\n        );\n      }\n    });\n\n    return next.handle(request).pipe(\n      catchError(error => {\n        if(error){\n          localStorage.removeItem('user')\n        }\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RedeSocial } from '@app/models/RedeSocial';\nimport { environment } from '@enviroments/environment';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RedeSocialService {\n  baseURL = environment.apiURL + 'api/redesSociais'\n\nconstructor( private http: HttpClient ) { }\n\n/**\n *\n * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrita em minúsculo.\n * @param id Precisa passar o palestranteId ou o eventoId dependendo da sua origem.\n * @returns Observable<RedeSocial[]>\n */\npublic getRedesSociais(origem: string, id: number): Observable<RedeSocial[]> {\n  let URL =\n    id == 0\n    ? `${this.baseURL}/${origem}`\n    : `${this.baseURL}/${origem}/${id}`\n\n    return this.http.get<RedeSocial[]>(URL).pipe(take(1))\n}\n\n/**\n *\n * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrita em minúsculo.\n * @param id Precisa passar o palestranteId ou o eventoId dependendo da sua origem.\n * @param redesSociais Precisa adicionar redes sociais organizadas em RedeSocial[].\n * @returns Observable<RedeSocial[]>\n */\npublic saveRedesSociais(\n  origem: string,\n  id: number,\n  redesSociais: RedeSocial[]\n  ): Observable<RedeSocial[]> {\n    let URL =\n      id == 0\n      ? `${this.baseURL}/${origem}`\n      : `${this.baseURL}/${origem}/${id}`\n\n    return this.http.put<RedeSocial[]>(URL, redesSociais).pipe(take(1))\n}\n\n/**\n *\n * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrita em minúsculo.\n * @param id Precisa passar o palestranteId ou o eventoId dependendo da sua origem.\n * @param redeSocialId Precisa adicionar o id da rede social.\n * @returns Observable<any> - Pois é o retorno da Rota.\n */\npublic deleteRedeSocial(\n  origem: string,\n  id: number,\n  redeSocialId: number,\n  ): Observable<any> {\n    let URL =\n      id == 0\n      ? `${this.baseURL}/${origem}/${redeSocialId}`\n      : `${this.baseURL}/${origem}/${id}/${redeSocialId}`\n\n    return this.http.delete(URL).pipe(take(1))\n}\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Evento } from '../models/Evento';\nimport { environment } from '@enviroments/environment';\nimport { PaginatedResult } from '@app/models/Pagination';\n\n@Injectable()\n\nexport class EventoService {\n  baseURL = environment.apiURL + 'api/Eventos';\n\nconstructor(private http: HttpClient) { }\n\npublic getEvento(page?: number, itemsPerPage?: number, term: string = \"\"): Observable<PaginatedResult<Evento[]>> {\n  const paginatedResult: PaginatedResult<Evento[]> = new PaginatedResult<Evento[]>();\n\n  let params = new HttpParams;\n\n  if(page != null && itemsPerPage != null){\n    params = params.append('pageNumber', page.toString());\n    params = params.append('pageSize', itemsPerPage.toString());\n  }\n\n  if(term != '')\n    params = params.append('term', term);\n\n  return this.http\n         .get<Evento[]>(this.baseURL, {observe: 'response', params})\n         .pipe(\n          take(1),\n          map((response) => {\n            paginatedResult.result = response.body;\n            if(response.headers.has('Pagination')){\n              paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n            }\n\n            return paginatedResult;\n          }));\n}\n\npublic getEventoById(id: number): Observable<Evento> {\n  return this.http\n         .get<Evento>(`${this.baseURL}/${id}`)\n         .pipe(take(1));\n}\n\npublic post(evento: Evento): Observable<Evento> {\n  return this.http\n         .post<Evento>(this.baseURL, evento)\n         .pipe(take(1));\n}\n\npublic put(evento: Evento): Observable<Evento> {\n  return this.http\n         .put<Evento>(`${this.baseURL}/${evento.id}`, evento)\n         .pipe(take(1));\n}\n\npublic deleteEvento(id: number): Observable<any> {\n  return this.http\n         .delete(`${this.baseURL}/${id}`)\n         .pipe(take(1));\n}\n\npublic postUpload(eventoId: number, file: File): Observable<Evento> {\n  const fileToUpload = file[0] as File;\n  const formData = new FormData();\n  formData.append('file', fileToUpload);\n\n  return this.http\n         .post<Evento>(`${this.baseURL}/upload-image/${eventoId}`, formData)\n         .pipe(take(1));\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-palestrantes',\n  templateUrl: './palestrantes.component.html',\n  styleUrls: ['./palestrantes.component.scss']\n})\nexport class PalestrantesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Palestrantes'\"></app-titulo>\n<app-palestrante-lista></app-palestrante-lista>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PaginatedResult } from '@app/models/Pagination';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { environment } from '@enviroments/environment';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PalestranteService {\n  baseURL = environment.apiURL + 'api/palestrantes';\n\n  constructor(private http: HttpClient) { }\n\n  public getPalestrantes(page?: number, itemsPerPage?: number, term: string = \"\"): Observable<PaginatedResult<Palestrante[]>> {\n    const paginatedResult: PaginatedResult<Palestrante[]> = new PaginatedResult<Palestrante[]>();\n\n    let params = new HttpParams;\n\n    if(page != null && itemsPerPage != null){\n      params = params.append('pageNumber', page.toString());\n      params = params.append('pageSize', itemsPerPage.toString());\n    }\n\n    if(term != '')\n      params = params.append('term', term);\n\n    return this.http\n           .get<Palestrante[]>(this.baseURL + '/all', {observe: 'response', params})\n           .pipe(\n            take(1),\n            map((response) => {\n              paginatedResult.result = response.body;\n              if(response.headers.has('Pagination')){\n                paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n              }\n\n              return paginatedResult;\n            }));\n  }\n\n  public getPalestrante(): Observable<Palestrante> {\n    return this.http\n           .get<Palestrante>(`${this.baseURL}`)\n           .pipe(take(1));\n  }\n\n  public post(): Observable<Palestrante> {\n    return this.http\n           .post<Palestrante>(this.baseURL, {} as Palestrante)\n           .pipe(take(1));\n  }\n\n  public put(palestrante: Palestrante): Observable<Palestrante> {\n    return this.http\n           .put<Palestrante>(`${this.baseURL}`, palestrante)\n           .pipe(take(1));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\nimport { UserUpdate } from '@app/models/identity/UserUpdate';\nimport { AccountService } from '@app/services/account.service';\nimport { environment } from '@enviroments/environment';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n  public usuario = {} as UserUpdate;\n  imagemURL = '';\n  file : File;\n\n  constructor(private spinner: NgxSpinnerService,\n              private toastr: ToastrService,\n              private accountService: AccountService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  public get ehPalestrante(): boolean{\n    return this.usuario.funcao == 'Palestrante';\n  }\n\n  get f(): any{\n    return '';\n  }\n\n  public setFormValue(usuario: UserUpdate): void{\n    this.usuario = usuario;\n    if(this.usuario.imagemURL)\n      this.imagemURL = environment.apiURL + `Resources/Perfil/${this.usuario.imagemURL}`\n    else\n      this.imagemURL = './assets/img/perfil.png'\n  }\n\n  onFileChange(ev: any): void{\n    const reader = new FileReader();\n\n    reader.onload = (event: any) => this.imagemURL = event.target.result;\n\n    this.file = ev.target.files;\n    reader.readAsDataURL(this.file[0]);\n\n    this.uploadImage();\n  }\n\n  uploadImage(): void{\n    this.spinner.show();\n    this.accountService.postUpload(this.file).subscribe(\n      () => {\n        this.toastr.success('Sucesso ao carregar a imagem!', 'Sucesso!');\n      },\n      (error: any) => {\n        this.toastr.error('Erro ao carregar imagem', 'Error!');\n        console.log(error)\n      }\n    ).add(() => this.spinner.hide());\n\n  }\n\n}\n","<app-titulo [titulo]=\"'Perfil' + (ehPalestrante ? ' Palestrante' : '')\" [iconClass]=\"'fa fa-address-card'\"></app-titulo>\n<div class=\"card rounded shadow-sm\">\n\t<div class=\"row p-3\">\n\t\t<div class=\"col-lg-3 pt-1\">\n\t\t\t<div class=\"card mb-3\">\n\t\t\t\t<div class=\"card-header\">\n          <input type=\"file\" #file (change)=\"onFileChange($event)\" style=\"display: none;\">\n        </div>\n\t\t\t\t<div class=\"d-flex align-self-center pt-3\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t[src]=\"imagemURL\"\n            (click)=\"file.click()\"\n\t\t\t\t\t\tname=\"aboutme\"\n            width=\"120\"\n            height=\"120\"\n            class=\"rounded-circle\"\n            style=\"cursor: pointer;\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t<div class=\"h4 text-center mb-3\">{{usuario.username}}</div>\n\t\t\t\t\t<div class=\"h7 text-bold pb-1\"><b>Nome: </b>{{usuario.primeiroNome +' '+ usuario.ultimoNome}}</div>\n\t\t\t\t\t<div class=\"h7\">\n\t\t\t\t\t\t{{usuario.descricao}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ul class=\"list-group list-group-flush\">\n\t\t\t\t\t<li class=\"list-group-item\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-6 text-center border-right\">\n\t\t\t\t\t\t\t\t<div class=\"h5\">0</div>\n\t\t\t\t\t\t\t\t<div class=\"h6 text-muted\">Meus Eventos Criados</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-6 text-center\">\n\t\t\t\t\t\t\t\t<div class=\"h5\">0</div>\n\t\t\t\t\t\t\t\t<div class=\"h6 text-muted\">Eventos como {{ehPalestrante ? 'Palestrante' : 'Participante'}}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div class=\"card-footer\"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-lg-9\">\n      <tabset>\n        <tab class=\"border border-top-0 p-3\">\n          <ng-template tabHeading>\n            <i class=\"fa-solid fa-address-card mr-2\"></i><span>Perfil</span>\n          </ng-template>\n          <app-perfil-detalhe (ChangeFormValue)=\"setFormValue($event)\"></app-perfil-detalhe>\n        </tab>\n        <tab *ngIf=\"ehPalestrante\" class=\"border border-top-0 p-3\">\n          <ng-template tabHeading>\n            <i class=\"fa-solid fa-user mr-2\"></i><span>Palestrante</span>\n          </ng-template>\n          <div class=\"form-group\">\n            <h3 class=\"border-bottom\">Palestrante</h3>\n          </div>\n\n              <app-palestrante-detalhe></app-palestrante-detalhe>\n        </tab>\n        <tab *ngIf=\"ehPalestrante\" class=\"border border-top-0 p-3\">\n          <ng-template tabHeading>\n            <i class=\"fa-regular fa-share-from-square mr-2\"></i><span>Redes Sociais</span>\n          </ng-template>\n          <div class=\"form-group\">\n            <h3 class=\"border-bottom\">Redes Sociais</h3>\n          </div>\n\n          <app-redesSociais></app-redesSociais>\n        </tab>\n      </tabset>\n\t\t</div>\n\t</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ContatosComponent } from './components/contatos/contatos.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\n\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\n\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { AuthGuard } from './guard/auth.guard';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n\n  { path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n  { path: 'user', redirectTo: '/user/perfil' },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'user/perfil', component: PerfilComponent },\n      { path: 'eventos', redirectTo: 'eventos/lista' },\n      {\n        path: 'eventos', component: EventosComponent,\n        children: [\n          { path: 'detalhe/:id', component: EventoDetalheComponent },\n          { path: 'detalhe', component: EventoDetalheComponent },\n         // { path: 'detalhe/lote', component: EventoDetalheComponent },\n          { path: 'lista', component: EventoListaComponent }\n        ]\n      },\n      { path: 'palestrantes', component: PalestrantesComponent },\n      { path: 'contatos', component: ContatosComponent },\n      { path: 'dashboard', component: DashboardComponent },\n      { path: '**', redirectTo: 'home', pathMatch: 'full' }\n    ]\n  },\n  { path: 'home', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n\t<router-outlet></router-outlet>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}